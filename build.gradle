plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
	id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

version = project.mod_version
archivesBaseName = project.mod_id

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'parchment', version: "${parchment_version}"

    // accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')
	
    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                justawrench {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                justawrench {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'justawrench', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                justawrench {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.4'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "${project.mod_id}",
                "Specification-Vendor"    : "${project.mod_author}",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "${project.mod_author}",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}
